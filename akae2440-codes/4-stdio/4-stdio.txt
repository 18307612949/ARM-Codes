
========================================================================

** ELF Header Information

    File Name: 4-stdio.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000000
    Flags: EF_ARM_HASENTRY + EF_ARM_SYMSARESORTED + EF_ARM_MAPSYMSFIRST (0x02000016)

    EABI conformance : ARM EABI Version 2.

    Built with
    ARM C Compiler, ADS1.2 [Build 805]
    ARM/Thumb Macro Assembler vsn ADS1.2 [Build 805]
    ARM Linker, ADS1.2 [Build 805] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 8

    Program header offset: 1796 (0x00000704)
    Section header offset: 1828 (0x00000724)

    Section header string table index: 7

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_R + PF_ARM_ENTRY]
    Size : 504 bytes
    Virtual address: 0x00000000


========================================================================

** Section #1 'ER_RO' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 504 bytes (alignment 4)

    $a
    demo
        0x00000000:    e3a0dd40    @...    MOV      r13,#0x1000
        0x00000004:    ea000009    ....    B        mymain  ; 0x30
    sys_init
    .text
        0x00000008:    e3a00000    ....    MOV      r0,#0
        0x0000000c:    e3a01453    S...    MOV      r1,#0x53000000
        0x00000010:    e5810000    ....    STR      r0,[r1,#0]
        0x00000014:    e3a01582    ....    MOV      r1,#0x20800000
        0x00000018:    e5c10000    ....    STRB     r0,[r1,#0]
        0x0000001c:    e3a02001    . ..    MOV      r2,#1
        0x00000020:    e3a01456    V...    MOV      r1,#0x56000000
        0x00000024:    e5812010    . ..    STR      r2,[r1,#0x10]
        0x00000028:    e5810014    ....    STR      r0,[r1,#0x14]
        0x0000002c:    e1a0f00e    ....    MOV      pc,r14
    mymain
        0x00000030:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x00000034:    e24dd064    d.M.    SUB      r13,r13,#0x64
        0x00000038:    ebfffff2    ....    BL       sys_init  ; 0x8
        0x0000003c:    eb000022    "...    BL       uart_init  ; 0xcc
        0x00000040:    e28f0034    4...    ADD      r0,pc,#0x34 ; #0x7c
        0x00000044:    eb00004b    K...    BL       puts  ; 0x178
        0x00000048:    e28f0048    H...    ADD      r0,pc,#0x48 ; #0x98
        0x0000004c:    ea000008    ....    B        0x74
        0x00000050:    e28f005c    \...    ADD      r0,pc,#0x5c ; #0xb4
        0x00000054:    eb000047    G...    BL       puts  ; 0x178
        0x00000058:    e1a0000d    ....    MOV      r0,r13
        0x0000005c:    eb00004f    O...    BL       gets  ; 0x1a0
        0x00000060:    e28f0058    X...    ADD      r0,pc,#0x58 ; #0xc0
        0x00000064:    eb000043    C...    BL       puts  ; 0x178
        0x00000068:    e1a0000d    ....    MOV      r0,r13
        0x0000006c:    eb000041    A...    BL       puts  ; 0x178
        0x00000070:    e28f0038    8...    ADD      r0,pc,#0x38 ; #0xb0
        0x00000074:    eb00003f    ?...    BL       puts  ; 0x178
        0x00000078:    eafffff4    ....    B        0x50
    $d
        0x0000007c:    6f4e0a0a    ..No    DCD    1867385354
        0x00000080:    32322076    v 22    DCD    842145910
        0x00000084:    31303220     201    DCD    825242144
        0x00000088:    31202031    1  1    DCD    824188977
        0x0000008c:    33353a35    5:53    DCD    859126325
        0x00000090:    0a38313a    :18.    DCD    171454778
        0x00000094:    00000000    ....    DCD    0
        0x00000098:    636c6577    welc    DCD    1668048247
        0x0000009c:    20656d6f    ome     DCD    543518063
        0x000000a0:    6d206f74    to m    DCD    1830842228
        0x000000a4:    6f622079    y bo    DCD    1868701817
        0x000000a8:    7620746f    ot v    DCD    1981838447
        0x000000ac:    20302e31    1.0     DCD    540028465
        0x000000b0:    0000000a    ....    DCD    10
        0x000000b4:    65616b61    akae    DCD    1700883297
        0x000000b8:    24207564    du $    DCD    606106980
        0x000000bc:    00000020     ...    DCD    32
        0x000000c0:    72756f79    your    DCD    1920298873
        0x000000c4:    706e6920     inp    DCD    1886284064
        0x000000c8:    003a7475    ut:.    DCD    3830901
    uart_init
    $a
    .text
        0x000000cc:    e3a00456    V...    MOV      r0,#0x56000000
        0x000000d0:    e5901070    p...    LDR      r1,[r0,#0x70]
        0x000000d4:    e38110a0    ....    ORR      r1,r1,#0xa0
        0x000000d8:    e5801070    p...    STR      r1,[r0,#0x70]
        0x000000dc:    e3a00450    P...    MOV      r0,#0x50000000
        0x000000e0:    e5901000    ....    LDR      r1,[r0,#0]
        0x000000e4:    e3811003    ....    ORR      r1,r1,#3
        0x000000e8:    e5801000    ....    STR      r1,[r0,#0]
        0x000000ec:    e5901004    ....    LDR      r1,[r0,#4]
        0x000000f0:    e3811005    ....    ORR      r1,r1,#5
        0x000000f4:    e5801004    ....    STR      r1,[r0,#4]
        0x000000f8:    e3a01026    &...    MOV      r1,#0x26
        0x000000fc:    e5801028    (...    STR      r1,[r0,#0x28]
        0x00000100:    e1a0f00e    ....    MOV      pc,r14
    uart_putchar
        0x00000104:    e3a02450    P$..    MOV      r2,#0x50000000
        0x00000108:    e5921010    ....    LDR      r1,[r2,#0x10]
        0x0000010c:    e3110004    ....    TST      r1,#4
        0x00000110:    0afffffc    ....    BEQ      0x108
        0x00000114:    e5820020     ...    STR      r0,[r2,#0x20]
        0x00000118:    e1a0f00e    ....    MOV      pc,r14
    uart_getchar
        0x0000011c:    e3a01450    P...    MOV      r1,#0x50000000
        0x00000120:    e5910010    ....    LDR      r0,[r1,#0x10]
        0x00000124:    e3100001    ....    TST      r0,#1
        0x00000128:    0afffffc    ....    BEQ      0x120
        0x0000012c:    e5910024    $...    LDR      r0,[r1,#0x24]
        0x00000130:    e20000ff    ....    AND      r0,r0,#0xff
        0x00000134:    e1a0f00e    ....    MOV      pc,r14
    putchar
    .text
        0x00000138:    e92d4010    .@-.    STMFD    r13!,{r4,r14}
        0x0000013c:    e1a04000    .@..    MOV      r4,r0
        0x00000140:    e350000a    ..P.    CMP      r0,#0xa
        0x00000144:    03a0000d    ....    MOVEQ    r0,#0xd
        0x00000148:    0a000004    ....    BEQ      0x160
        0x0000014c:    e3540008    ..T.    CMP      r4,#8
        0x00000150:    1a000003    ....    BNE      0x164
        0x00000154:    e3a00008    ....    MOV      r0,#8
        0x00000158:    ebffffe9    ....    BL       uart_putchar  ; 0x104
        0x0000015c:    e3a00020     ...    MOV      r0,#0x20
        0x00000160:    ebffffe7    ....    BL       uart_putchar  ; 0x104
        0x00000164:    e20400ff    ....    AND      r0,r4,#0xff
        0x00000168:    ebffffe5    ....    BL       uart_putchar  ; 0x104
        0x0000016c:    e1a00004    ....    MOV      r0,r4
        0x00000170:    e8bd8010    ....    LDMFD    r13!,{r4,pc}
    getchar
        0x00000174:    eaffffe8    ....    B        uart_getchar  ; 0x11c
    puts
        0x00000178:    e92d4010    .@-.    STMFD    r13!,{r4,r14}
        0x0000017c:    e1a04000    .@..    MOV      r4,r0
        0x00000180:    ea000001    ....    B        0x18c
        0x00000184:    e2844001    .@..    ADD      r4,r4,#1
        0x00000188:    ebffffea    ....    BL       putchar  ; 0x138
        0x0000018c:    e5d40000    ....    LDRB     r0,[r4,#0]
        0x00000190:    e3500000    ..P.    CMP      r0,#0
        0x00000194:    1afffffa    ....    BNE      0x184
        0x00000198:    e3a00000    ....    MOV      r0,#0
        0x0000019c:    e8bd8010    ....    LDMFD    r13!,{r4,pc}
    gets
        0x000001a0:    e92d4038    8@-.    STMFD    r13!,{r3-r5,r14}
        0x000001a4:    e1a05000    .P..    MOV      r5,r0
        0x000001a8:    e1a04000    .@..    MOV      r4,r0
        0x000001ac:    ea000006    ....    B        0x1cc
        0x000001b0:    e3500008    ..P.    CMP      r0,#8
        0x000001b4:    12844001    .@..    ADDNE    r4,r4,#1
        0x000001b8:    1a000002    ....    BNE      0x1c8
        0x000001bc:    e1540005    ..T.    CMP      r4,r5
        0x000001c0:    9a000001    ....    BLS      0x1cc
        0x000001c4:    e2444001    .@D.    SUB      r4,r4,#1
        0x000001c8:    ebffffda    ....    BL       putchar  ; 0x138
        0x000001cc:    ebffffd2    ....    BL       uart_getchar  ; 0x11c
        0x000001d0:    e20000ff    ....    AND      r0,r0,#0xff
        0x000001d4:    e5c40000    ....    STRB     r0,[r4,#0]
        0x000001d8:    e350000d    ..P.    CMP      r0,#0xd
        0x000001dc:    1afffff3    ....    BNE      0x1b0
        0x000001e0:    e3a00000    ....    MOV      r0,#0
        0x000001e4:    e5c40000    ....    STRB     r0,[r4,#0]
        0x000001e8:    e3a0000a    ....    MOV      r0,#0xa
        0x000001ec:    ebffffd1    ....    BL       putchar  ; 0x138
        0x000001f0:    e1a00005    ....    MOV      r0,r5
        0x000001f4:    e8bd8038    8...    LDMFD    r13!,{r3-r5,pc}

** Section #2 '.debug_frame' (SHT_PROGBITS)
    Size   : 332 bytes


** Section #3 '.symtab' (SHT_SYMTAB)
    Size   : 368 bytes (alignment 4)
    String table '.strtab'
    Last local symbol no. 12


** Section #4 '.strtab' (SHT_STRTAB)
    Size   : 216 bytes


** Section #5 '.note' (SHT_NOTE)
    Size   : 20 bytes (alignment 4)


** Section #6 '.comment' (SHT_PROGBITS)
    Size   : 220 bytes


** Section #7 '.shstrtab' (SHT_STRTAB)
    Size   : 84 bytes


