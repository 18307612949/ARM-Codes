
========================================================================

** ELF Header Information

    File Name: uart.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x50000000
    Flags: EF_ARM_HASENTRY + EF_ARM_SYMSARESORTED + EF_ARM_MAPSYMSFIRST (0x02000016)

    EABI conformance : ARM EABI Version 2.

    Built with
    ARM C Compiler, ADS1.2 [Build 805]
    ARM/Thumb Macro Assembler vsn ADS1.2 [Build 805]
    ARM Linker, ADS1.2 [Build 805] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 8

    Program header offset: 1640 (0x00000668)
    Section header offset: 1672 (0x00000688)

    Section header string table index: 7

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_R + PF_ARM_ENTRY]
    Size : 380 bytes
    Virtual address: 0x50000000


========================================================================

** Section #1 'ER_RO' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 380 bytes (alignment 4)
    Address: 0x50000000

    start
    $a
        0x50000000:    ea000005    ....    B        mymain  ; 0x5000001c
    delay
    .text
        0x50000004:    e3a00000    ....    MOV      r0,#0
        0x50000008:    e2800001    ....    ADD      r0,r0,#1
        0x5000000c:    e250caf4    ..P.    SUBS     r12,r0,#0xf4000
        0x50000010:    a25ccf90    ..\.    SUBGES   r12,r12,#0x240
        0x50000014:    bafffffb    ....    BLT      0x50000008
        0x50000018:    e1a0f00e    ....    MOV      pc,r14
    mymain
        0x5000001c:    e92d4038    8@-.    STMFD    r13!,{r3-r5,r14}
        0x50000020:    e59f5044    DP..    LDR      r5,0x5000006c
        0x50000024:    e3a04000    .@..    MOV      r4,#0
        0x50000028:    eb000010    ....    BL       led_init  ; 0x50000070
        0x5000002c:    e3a00000    ....    MOV      r0,#0
        0x50000030:    e7850104    ....    STR      r0,[r5,r4,LSL #2]
        0x50000034:    e2844001    .@..    ADD      r4,r4,#1
        0x50000038:    e354000c    ..T.    CMP      r4,#0xc
        0x5000003c:    bafffffb    ....    BLT      0x50000030
        0x50000040:    eb000029    )...    BL       uart_init  ; 0x500000ec
        0x50000044:    e3a04061    a@..    MOV      r4,#0x61
        0x50000048:    e1a00004    ....    MOV      r0,r4
        0x5000004c:    eb00003c    <...    BL       uart_putchar  ; 0x50000144
        0x50000050:    e2840001    ....    ADD      r0,r4,#1
        0x50000054:    e20040ff    .@..    AND      r4,r0,#0xff
        0x50000058:    e354007a    z.T.    CMP      r4,#0x7a
        0x5000005c:    9afffff9    ....    BLS      0x50000048
        0x50000060:    eb00003d    =...    BL       uart_getchar  ; 0x5000015c
        0x50000064:    eb000036    6...    BL       uart_putchar  ; 0x50000144
        0x50000068:    eafffffc    ....    B        0x50000060
    $d
        0x5000006c:    7f005000    .P..    DCD    2130726912
    led_init
    $a
    .text
        0x50000070:    e59f0070    p...    LDR      r0,0x500000e8
        0x50000074:    e5901830    0...    LDR      r1,[r0,#0x830]
        0x50000078:    e3811d40    @...    ORR      r1,r1,#0x1000
        0x5000007c:    e5801830    0...    STR      r1,[r0,#0x830]
        0x50000080:    e5901830    0...    LDR      r1,[r0,#0x830]
        0x50000084:    e3c11d80    ....    BIC      r1,r1,#0x2000
        0x50000088:    e5801830    0...    STR      r1,[r0,#0x830]
        0x5000008c:    e5901800    ....    LDR      r1,[r0,#0x800]
        0x50000090:    e3811b40    @...    ORR      r1,r1,#0x10000
        0x50000094:    e5801800    ....    STR      r1,[r0,#0x800]
        0x50000098:    e5901800    ....    LDR      r1,[r0,#0x800]
        0x5000009c:    e3c11ae0    ....    BIC      r1,r1,#0xe0000
        0x500000a0:    e5801800    ....    STR      r1,[r0,#0x800]
        0x500000a4:    e1a0f00e    ....    MOV      pc,r14
    led_on
        0x500000a8:    e59f0038    8...    LDR      r0,0x500000e8
        0x500000ac:    e5901808    ....    LDR      r1,[r0,#0x808]
        0x500000b0:    e3c11010    ....    BIC      r1,r1,#0x10
        0x500000b4:    e5801808    ....    STR      r1,[r0,#0x808]
        0x500000b8:    e5901834    4...    LDR      r1,[r0,#0x834]
        0x500000bc:    e3c11040    @...    BIC      r1,r1,#0x40
        0x500000c0:    e5801834    4...    STR      r1,[r0,#0x834]
        0x500000c4:    e1a0f00e    ....    MOV      pc,r14
    led_off
        0x500000c8:    e59f0018    ....    LDR      r0,0x500000e8
        0x500000cc:    e5901808    ....    LDR      r1,[r0,#0x808]
        0x500000d0:    e3811010    ....    ORR      r1,r1,#0x10
        0x500000d4:    e5801808    ....    STR      r1,[r0,#0x808]
        0x500000d8:    e5901834    4...    LDR      r1,[r0,#0x834]
        0x500000dc:    e3811040    @...    ORR      r1,r1,#0x40
        0x500000e0:    e5801834    4...    STR      r1,[r0,#0x834]
        0x500000e4:    e1a0f00e    ....    MOV      pc,r14
    $d
        0x500000e8:    7f008000    ....    DCD    2130739200
    uart_init
    $a
    .text
        0x500000ec:    e59f0084    ....    LDR      r0,0x50000178
        0x500000f0:    e5901004    ....    LDR      r1,[r0,#4]
        0x500000f4:    e3811004    ....    ORR      r1,r1,#4
        0x500000f8:    e5801004    ....    STR      r1,[r0,#4]
        0x500000fc:    e5901004    ....    LDR      r1,[r0,#4]
        0x50000100:    e3c11008    ....    BIC      r1,r1,#8
        0x50000104:    e5801004    ....    STR      r1,[r0,#4]
        0x50000108:    e5901004    ....    LDR      r1,[r0,#4]
        0x5000010c:    e3811001    ....    ORR      r1,r1,#1
        0x50000110:    e5801004    ....    STR      r1,[r0,#4]
        0x50000114:    e5901004    ....    LDR      r1,[r0,#4]
        0x50000118:    e3c11002    ....    BIC      r1,r1,#2
        0x5000011c:    e5801004    ....    STR      r1,[r0,#4]
        0x50000120:    e5901004    ....    LDR      r1,[r0,#4]
        0x50000124:    e3811ec0    ....    ORR      r1,r1,#0xc00
        0x50000128:    e5801004    ....    STR      r1,[r0,#4]
        0x5000012c:    e3a01022    "...    MOV      r1,#0x22
        0x50000130:    e5801028    (...    STR      r1,[r0,#0x28]
        0x50000134:    e5901000    ....    LDR      r1,[r0,#0]
        0x50000138:    e3811003    ....    ORR      r1,r1,#3
        0x5000013c:    e5801000    ....    STR      r1,[r0,#0]
        0x50000140:    e1a0f00e    ....    MOV      pc,r14
    uart_putchar
        0x50000144:    e59f202c    , ..    LDR      r2,0x50000178
        0x50000148:    e5921010    ....    LDR      r1,[r2,#0x10]
        0x5000014c:    e3110004    ....    TST      r1,#4
        0x50000150:    0afffffc    ....    BEQ      0x50000148
        0x50000154:    e5820020     ...    STR      r0,[r2,#0x20]
        0x50000158:    e1a0f00e    ....    MOV      pc,r14
    uart_getchar
        0x5000015c:    e59f1014    ....    LDR      r1,0x50000178
        0x50000160:    e5910010    ....    LDR      r0,[r1,#0x10]
        0x50000164:    e3100001    ....    TST      r0,#1
        0x50000168:    0afffffc    ....    BEQ      0x50000160
        0x5000016c:    e5910024    $...    LDR      r0,[r1,#0x24]
        0x50000170:    e20000ff    ....    AND      r0,r0,#0xff
        0x50000174:    e1a0f00e    ....    MOV      pc,r14
    $d
        0x50000178:    7f005000    .P..    DCD    2130726912

** Section #2 '.debug_frame' (SHT_PROGBITS)
    Size   : 272 bytes


** Section #3 '.symtab' (SHT_SYMTAB)
    Size   : 400 bytes (alignment 4)
    String table '.strtab'
    Last local symbol no. 14


** Section #4 '.strtab' (SHT_STRTAB)
    Size   : 212 bytes


** Section #5 '.note' (SHT_NOTE)
    Size   : 20 bytes (alignment 4)


** Section #6 '.comment' (SHT_PROGBITS)
    Size   : 220 bytes


** Section #7 '.shstrtab' (SHT_STRTAB)
    Size   : 84 bytes


